#LE PIDO AL USUARIO QUE INGRESE LOS DOS CONJUNTOS.
def pedir_conjuntos():
    while True:
        dato1 = input("Ingrese n√∫meros separados por espacios para el primer conjunto de elementos: ")
        dato2 = input("Ingrese n√∫meros separados por espacios para el segundo conjunto de elementos: ")
        try:
            lista1 = list(map(int, dato1.split()))
            lista2 = list(map(int, dato2.split()))
            return lista1, lista2
        except ValueError:
            print("‚ö†Ô∏è Error: Por favor ingrese solo n√∫meros separados por espacios. Intente de nuevo.\n")

#OPERACI√ìN DE UNI√ìN.
def union(lista1, lista2):
    resultado_union = list(set(lista1 + lista2))
    print("\nResultado de la uni√≥n:", resultado_union)

#OPERACI√ìN DE INTERSECCI√ìN.
def interseccion(lista1, lista2):
    resultado_interseccion = list(set(lista1) & set(lista2))
    print("\nResultado de la intersecci√≥n:", resultado_interseccion)

#OPERACI√ìN DE DIFERENCIA.
def diferencia(lista1, lista2):
    resultado_diferencia = list(set(lista1) - set(lista2))
    print("\nResultado de la diferencia (primer conjunto - segundo conjunto):", resultado_diferencia)

#MEN√ö.
def mostrar_menu():
    print("\n" + "="*30)
    print("   MEN√ö DE OPERACIONES DE CONJUNTOS")
    print("="*30)
    print("1 - Ingresar conjuntos")
    print("2 - Uni√≥n (Y)")
    print("3 - Intersecci√≥n (O)")
    print("4 - Diferencia (-)")
    print("5 - Salir")
    print("="*30)

#FUNCI√ìN QUE CONTROLA EL FLUJO DEL PROGRAMA.
def programa():
    lista1, lista2 = [], []
    conjuntos_cargados = False

    while True:
        mostrar_menu()
        opcion = input("Seleccione una opci√≥n (1-5): ")

        if opcion == "1":
            lista1, lista2 = pedir_conjuntos()
            conjuntos_cargados = True
            print("‚úÖ Conjuntos cargados correctamente.")

        elif opcion == "2":
            if not conjuntos_cargados:
                print("‚ö†Ô∏è Por favor, ingrese primero los conjuntos (opci√≥n 1).")
            else:
                union(lista1, lista2)

        elif opcion == "3":
            if not conjuntos_cargados:
                print("‚ö†Ô∏è Por favor, ingrese primero los conjuntos (opci√≥n 1).")
            else:
                interseccion(lista1, lista2)

        elif opcion == "4":
            if not conjuntos_cargados:
                print("‚ö†Ô∏è Por favor, ingrese primero los conjuntos (opci√≥n 1).")
            else:
                diferencia(lista1, lista2)

        elif opcion == "5":
            print("¬°Gracias por usar el programa! üëã")
            break

        else:
            print("‚ö†Ô∏è Opci√≥n inv√°lida. Por favor, ingrese un n√∫mero del 1 al 5.")

programa()







